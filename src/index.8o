#include "macros.8o"

: main
  lores
  render-vanity
  v0 := 100
  delay := v0
  loop
    v0 := delay
    if v0 != 0 then
  again
: restart
  render-title
  v0 := key

: main-redraw
  v0 := 1
  delay := v0
  loop
    v0 := delay
    if v0 != 0 then
  again
  i := long game-over
  load v0
  if v0 == 2 then jump reset

  clock-tick
  check-keys
  check-shots
  check-collisions
  render-scene
  explode-enemies
  jump main-redraw

: clock-tick
  i := long tick
  load v0 - v0 # Don't auto-increment i
  v0 += 1
  save v0

  # Hide level overlay after a while
  vF := 0b01111111
  v0 &= vF
  if v0 == 0 begin
    i := long level-screen
    save v0
    i := long game-over
    load v0 - v0
    if v0 == 1 then v0 := 2
    save v0
  end

  # Revive all enemies once in a while
  vF := 0b00111111
  v0 &= vF
  if v0 == 0 then revive-enemies

  # Regain power over time
  vF := 0b00000001
  v0 &= vF
  if v0 == 0 begin
    i := long hits
    load v0 - v0
    if v0 != 0 then v0 -= 1
    save v0
  end
  return

: check-shots
  # Are we shooting?
  i := long shooting
  load v0
  if v0 == 0 then return

  # Shooting costs power
  i := long hits
  load v0 - v0
  if v0 == 120 begin
    i := long shooting
    v0 := 0
    save v0
    return # Can't shoot without power
  else
    v0 += 1
    save v0
  end

  # Check if we shot any aliens
  i := long player
  load vC - vD
  vE := 0
  loop
    i := long enemies
    i += vE
    load v0 - v3
    # Don't blow up dead aliens
    if v0 == 0 then jump check-shots-next-alien
    if v0 > 2 then jump check-shots-next-alien
    # Check if we hit this alien
    v2 >>= v2
    v2 >>= v2
    if v2 > vC begin # Enemy is in front of player
      v3 >>= v3
      v3 >>= v3
      v3 -= vD
      v3 += 2
      if v3 < 8 begin # Enemy is on same height as player
        # Hit! Set enemy to explosion
        v0 := 3
        save v0
        # Increast score
        i := long score
        load v0 - v0
        v0 += 1
        save v0
        # Next level if score overflows
        if v0 == 0 begin
          i := long level
          load v0 - v0
          v0 += 1
          save v0
          v0 := 1
          i := long level-screen
          save v0
          i := long tick
          save v0
          hide-enemies
        end
        # Make a beep
        v0 := 1
        buzzer := v0
      end
    end
    : check-shots-next-alien
    vE += 5
    if vE == ENEMY_BYTES then return # Checked all NUM_ENEMIES enemies?
  again

: check-collisions
  i := long player
  load vC - vD
  vE := 0
  loop
    i := long enemies
    i += vE
    load v0 - v3
    # Don't collide with dead or exploded aliens
    if v0 == 0 then jump check-collisions-next-alien
    if v0 > 2 then jump check-collisions-next-alien
    # Compare alien position (v2, v3) with player position (vC, vD)
    v2 >>= v2
    v2 >>= v2
    v2 -= vC
    v2 += 7
    if v2 < 15 begin
      v3 >>= v3
      v3 >>= v3
      v3 -= vD
      v3 += 3
      if v3 < 10 begin
        # Hit! Set enemy to explosion
        v0 := 3
        save v0
        # You get no points for this, but lose poser
        i := long hits
        load v0 - v0
        if v0 > 114 begin
          i := long game-over
          v0 := 1
          save v0
          i := long tick
          save v0
        else
          v0 += 10
          save v0
        end
      end
    end
    : check-collisions-next-alien
    vE += 5
    if vE == ENEMY_BYTES then return # Checked all NUM_ENEMIES enemies?
  again

: reset
  i := long reset-values
  load v9
  i := long player
  save v9
  jump restart

#data

: reset-values
  10 10 # Player X, Y
  0 # Shooting boolean
  1 # Level screen boolean
  0 # Game-over boolean
  0 # tick
  0 # wave
  1 # level
  0 # score
  0 # hits

#include "enemies.8o"
#include "renderer1.8o"
#include "game-state.8o"
#include "key-input.8o"
#include "text.8o"
#include "title.8o"
